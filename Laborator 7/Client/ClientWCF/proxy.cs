//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileProperty
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/ModelAndAPI")]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        public System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        public System.DateTime CreationDateField;

        public string DescriptionField;

        public int IdField;

        public string NameField;

        public string PathField;

        public FileProperty.PropertyList[] PropertyListsField;

        public double SizeField;

        public bool ToDeleteField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileProperty.PropertyList[] PropertyLists
        {
            get
            {
                return this.PropertyListsField;
            }
            set
            {
                this.PropertyListsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Size
        {
            get
            {
                return this.SizeField;
            }
            set
            {
                this.SizeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToDelete
        {
            get
            {
                return this.ToDeleteField;
            }
            set
            {
                this.ToDeleteField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyList", Namespace="http://schemas.datacontract.org/2004/07/ModelAndAPI")]
    public partial class PropertyList : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        public System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        public FileProperty.File FileField;

        public int FileIdField;

        public int IdField;

        public FileProperty.Property PropertyField;

        public int PropertyIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileProperty.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileProperty.Property Property
        {
            get
            {
                return this.PropertyField;
            }
            set
            {
                this.PropertyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyId
        {
            get
            {
                return this.PropertyIdField;
            }
            set
            {
                this.PropertyIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/ModelAndAPI")]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        public System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        public string DescriptionField;

        public int IdField;

        public FileProperty.PropertyList[] PropertyListsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FileProperty.PropertyList[] PropertyLists
        {
            get
            {
                return this.PropertyListsField;
            }
            set
            {
                this.PropertyListsField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFileProperty")]
public interface IFileProperty
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/AddFile", ReplyAction="http://tempuri.org/IFile/AddFileResponse")]
    bool AddFile(FileProperty.File file, int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/AddFile", ReplyAction="http://tempuri.org/IFile/AddFileResponse")]
    System.Threading.Tasks.Task<bool> AddFileAsync(FileProperty.File file, int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/FileSearch", ReplyAction="http://tempuri.org/IFile/FileSearchResponse")]
    FileProperty.File[] FileSearch(int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/FileSearch", ReplyAction="http://tempuri.org/IFile/FileSearchResponse")]
    System.Threading.Tasks.Task<FileProperty.File[]> FileSearchAsync(int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/ModifyFile", ReplyAction="http://tempuri.org/IFile/ModifyFileResponse")]
    bool ModifyFile(FileProperty.File file, int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/ModifyFile", ReplyAction="http://tempuri.org/IFile/ModifyFileResponse")]
    System.Threading.Tasks.Task<bool> ModifyFileAsync(FileProperty.File file, int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/GetFileProperties", ReplyAction="http://tempuri.org/IFile/GetFilePropertiesResponse")]
    FileProperty.Property[] GetFileProperties(int fileIndex);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/GetFileProperties", ReplyAction="http://tempuri.org/IFile/GetFilePropertiesResponse")]
    System.Threading.Tasks.Task<FileProperty.Property[]> GetFilePropertiesAsync(int fileIndex);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/MarkForDeletion", ReplyAction="http://tempuri.org/IFile/MarkForDeletionResponse")]
    bool MarkForDeletion(int[] fileIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/MarkForDeletion", ReplyAction="http://tempuri.org/IFile/MarkForDeletionResponse")]
    System.Threading.Tasks.Task<bool> MarkForDeletionAsync(int[] fileIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/FinishDeletion", ReplyAction="http://tempuri.org/IFile/FinishDeletionResponse")]
    bool FinishDeletion(bool cancel);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFile/FinishDeletion", ReplyAction="http://tempuri.org/IFile/FinishDeletionResponse")]
    System.Threading.Tasks.Task<bool> FinishDeletionAsync(bool cancel);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/AddProperty", ReplyAction="http://tempuri.org/IProperty/AddPropertyResponse")]
    bool AddProperty(string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/AddProperty", ReplyAction="http://tempuri.org/IProperty/AddPropertyResponse")]
    System.Threading.Tasks.Task<bool> AddPropertyAsync(string description);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/GetAllProperties", ReplyAction="http://tempuri.org/IProperty/GetAllPropertiesResponse")]
    FileProperty.Property[] GetAllProperties();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/GetAllProperties", ReplyAction="http://tempuri.org/IProperty/GetAllPropertiesResponse")]
    System.Threading.Tasks.Task<FileProperty.Property[]> GetAllPropertiesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/DeleteProperties", ReplyAction="http://tempuri.org/IProperty/DeletePropertiesResponse")]
    bool DeleteProperties(int[] propertyIndices);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProperty/DeleteProperties", ReplyAction="http://tempuri.org/IProperty/DeletePropertiesResponse")]
    System.Threading.Tasks.Task<bool> DeletePropertiesAsync(int[] propertyIndices);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFilePropertyChannel : IFileProperty, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FilePropertyClient : System.ServiceModel.ClientBase<IFileProperty>, IFileProperty
{
    
    public FilePropertyClient()
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FilePropertyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FilePropertyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool AddFile(FileProperty.File file, int[] propertyIndices)
    {
        return base.Channel.AddFile(file, propertyIndices);
    }
    
    public System.Threading.Tasks.Task<bool> AddFileAsync(FileProperty.File file, int[] propertyIndices)
    {
        return base.Channel.AddFileAsync(file, propertyIndices);
    }
    
    public FileProperty.File[] FileSearch(int[] propertyIndices)
    {
        return base.Channel.FileSearch(propertyIndices);
    }
    
    public System.Threading.Tasks.Task<FileProperty.File[]> FileSearchAsync(int[] propertyIndices)
    {
        return base.Channel.FileSearchAsync(propertyIndices);
    }
    
    public bool ModifyFile(FileProperty.File file, int[] propertyIndices)
    {
        return base.Channel.ModifyFile(file, propertyIndices);
    }
    
    public System.Threading.Tasks.Task<bool> ModifyFileAsync(FileProperty.File file, int[] propertyIndices)
    {
        return base.Channel.ModifyFileAsync(file, propertyIndices);
    }
    
    public FileProperty.Property[] GetFileProperties(int fileIndex)
    {
        return base.Channel.GetFileProperties(fileIndex);
    }
    
    public System.Threading.Tasks.Task<FileProperty.Property[]> GetFilePropertiesAsync(int fileIndex)
    {
        return base.Channel.GetFilePropertiesAsync(fileIndex);
    }
    
    public bool MarkForDeletion(int[] fileIndices)
    {
        return base.Channel.MarkForDeletion(fileIndices);
    }
    
    public System.Threading.Tasks.Task<bool> MarkForDeletionAsync(int[] fileIndices)
    {
        return base.Channel.MarkForDeletionAsync(fileIndices);
    }
    
    public bool FinishDeletion(bool cancel)
    {
        return base.Channel.FinishDeletion(cancel);
    }
    
    public System.Threading.Tasks.Task<bool> FinishDeletionAsync(bool cancel)
    {
        return base.Channel.FinishDeletionAsync(cancel);
    }
    
    public bool AddProperty(string description)
    {
        return base.Channel.AddProperty(description);
    }
    
    public System.Threading.Tasks.Task<bool> AddPropertyAsync(string description)
    {
        return base.Channel.AddPropertyAsync(description);
    }
    
    public FileProperty.Property[] GetAllProperties()
    {
        return base.Channel.GetAllProperties();
    }
    
    public System.Threading.Tasks.Task<FileProperty.Property[]> GetAllPropertiesAsync()
    {
        return base.Channel.GetAllPropertiesAsync();
    }
    
    public bool DeleteProperties(int[] propertyIndices)
    {
        return base.Channel.DeleteProperties(propertyIndices);
    }
    
    public System.Threading.Tasks.Task<bool> DeletePropertiesAsync(int[] propertyIndices)
    {
        return base.Channel.DeletePropertiesAsync(propertyIndices);
    }
}
